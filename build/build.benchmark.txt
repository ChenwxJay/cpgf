set(TARGET_BENCHMARK benchmark)

set(OUTNAME_BENCHMARK benchmark)

set(BENCHMARK_ROOT ${ROOT_PATH}/benchmark)

set(BENCHMARK_COMPILE_FLAGS " ")
set(BENCHMARK_LINK_FLAGS " ")
if(CMAKE_COMPILER_IS_GNUCC OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
	set(BENCHMARK_COMPILE_FLAGS "${GCC_OPTIMIZED_COMPILE_FLAGS}")
	set(BENCHMARK_LINK_FLAGS "${GCC_OPTIMIZED_LINK_FLAGS}")
endif(CMAKE_COMPILER_IS_GNUCC OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")

if(MSVC)
	set(BENCHMARK_COMPILE_FLAGS "${MSVC_OPTIMIZED_COMPILE_FLAGS} -GL")
	set(BENCHMARK_LINK_FLAGS "${MSVC_OPTIMIZED_LINK_FLAGS} -LTCG")
endif(MSVC)


file(GLOB GLOB_BENCHMARK_COMMON ${BENCHMARK_ROOT}/*.cpp)
file(GLOB GLOB_BENCHMARK_TESTS ${BENCHMARK_ROOT}/tests/*.cpp)

add_executable(
	${TARGET_BENCHMARK}
	EXCLUDE_FROM_ALL
	${GLOB_BENCHMARK_COMMON}
	${GLOB_BENCHMARK_TESTS}
)

set_target_properties(
	${TARGET_BENCHMARK}
	PROPERTIES
	OUTPUT_NAME ${OUTNAME_BENCHMARK}
	COMPILE_FLAGS ${BENCHMARK_COMPILE_FLAGS}
	LINK_FLAGS ${BENCHMARK_LINK_FLAGS}
)

target_link_libraries(${TARGET_BENCHMARK} ${TARGET_LIB} ${LUA_LIB})
