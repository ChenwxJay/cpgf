Todo:

1, In reflection, now finding base class is depending on global classes. Not fine. Should find base class in the most outter class recursively.
1, Metagen, needs to parse Doxygen document for annotation.
1, Support script override C++ functions. It's difficult. Adding interceptor in meta system is not enough.
2, Support object pool in interface based api
3, Test with Lua 5.2
1, GVariant passes rvalue reference as value, not efficient, should imporve.
2, Support default parameter values in meta method
3, Define meta data for STL
4, Define meta data for C library?

Done:
1, Refactor binding Perl script, remove the public field, use accessor instead.
1, Support byte array to ease binary data accessing in script
2, Support anonymous enum in script.
1, Support ExplicitThis policy for property getter and setter separately.
2, In v8, support property enumerator.
3, Test and support return GVariant to script.
4, in V8, should remove the static user data pool.
5, Support script object pass to cpp (wrap to object).
6, Support script function callback (wrap to object).
7, Need to test setting script function as property.
8, Support name replacer in meta data builder
9, Support explicit this in property getter and setter.
10, callback can't work with rvalue reference
11, Support bindAccessible in Lua binding
12, Better meta class definition syntax. Something like,
defineMetaClass(...)
	.method(...)
	.field(...)
	.property(...)
	.end()
