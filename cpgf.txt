Todo:

1, GVariant should allow a variant of integer 0 to be casted to NULL pointer.
2, Should support wide string in script binding.
1, metagen, should auto wrap bitfield with accessor functions.

1, In reflection, now finding base class is depending on global classes. Not fine. Should find base class in the most outter class recursively.
1, Metagen, needs to parse Doxygen document for annotation.
1, Support script override C++ functions. It's difficult. Adding interceptor in meta system is not enough.
2, Support object pool in interface based api
1, GVariant passes rvalue reference as value, not efficient, should imporve.
4, Define meta data for C library?


Done:


#include "cpgf/gapi.h"
#include "cpgf/gscopedptr.h"
#include <map>

typedef GSharedInterface<IScriptFunction> ScriptFunctionType;
typedef map<void *, ScriptFunctionType> MapType;
GScopedPointer<MapType> scriptFunctionMap;

void putScriptFunctionToMap(void * address, IScriptFunction * function)
{
	if(! scriptFunctionMap) {
		scriptFunctionMap.reset(new MapType);
	}
	(*scriptFunctionMap)[address].reset(function);
}

IScriptFunction * getScriptFunctionFromMap(void * address)
{
	if(! scriptFunctionMap) {
		return NULL;
	}
	IScriptFunction * function = (*scriptFunctionMap)[address].get();
	function->addReference();
	return function;
}

void clearScriptFunctionsInMap()
{
	if(scriptFunctionMap) {
		scriptFunctionMap->clear();
	}
}

