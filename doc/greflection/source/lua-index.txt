<{filename name=cpgf-luabinding }>

<{title}>cpgf Lua binding -- an open source library to bind Lua script to C++<{/title}>

<h1>cpgf Lua binding -- an open source library to bind Lua script to C++</h1>

<{autobr}>
cpgf Lua binding library is very easy to bind Lua to C++.
The library uses reflection meta data extensively.

cpgf Lua binding is licensed under Apache License, Version 2.0

<{/autobr}>

<h3>Key features</h3>

<{autoul}>

Bind C++ class to Lua. Then Lua script can create instance, invoke class member function, get/set class field and more.
Bind C++ enum type to Lua. Then Lua script can access the enum value by name.
Bind C++ functions (global or member) to Lua.
Bind C++ values to Lua variable.
The overloaded operators in C++ are bound to Lua together with the class.
Invoke Lua functions from C++.
Get and set Lua value from C++.

<{/autoul}>

<h3>This is only the beginning!</h3>

<{autobr}>
Lua binding is only the first script binding library introduced to cpgf library.
With the powerful reflection, we can add arbitrary script binding quite easily.

My next plan is to bring JavaScript binding to cpgf. Maybe Google V8 is a choice.

All script binding engine will use the same interface -- GScriptObject and IScriptObject, and use same meta data.

<{/autobr}>

<{include name="moredoc.inc" }>
