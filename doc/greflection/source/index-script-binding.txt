<{filename name=cpgf-script-binding }>

<{title}>cpgf script binding -- an open source library to bind Lua and Google V8 Javascript to C++ <{/title}>

<{include name="cpgf-header.inc" }>

<h1>cpgf script binding -- an open source library to bind Lua and Google V8 Javascript to C++ </h1>

<{autobr}>
cpgf script binding library is very easy script binding engine to bind Lua and Google V8 Javascript to C++.
The library uses reflection meta data extensively.

cpgf script binding is licensed under Apache License, Version 2.0

The supported Lua library is version 5.1
The supported Google V8 Javascript library is Version 3.4.5

<{/autobr}>

<h3>Key features</h3>

<{autoul}>

Bind C++ class to Lua and Google V8 Javascript. Then Lua and Javascript can create instance, invoke class member function, get/set class field or property, and more.
Bind C++ enum type to Lua and V8 Javascript. Then Lua and Javascript can access the enum value by name.
Bind C++ functions (global or member) to Lua and V8.
Bind C++ values to Lua and V8 variable.
Bind C++ operators to Lua (Lua only). The overloaded operators in C++ are bound to Lua together with the class.
Invoke Lua and V8 Javascript functions from C++.
Get and set Lua and V8 Javascript value from C++.

<{/autoul}>

<h3>Different script language, same API interface!</h3>

<{autobr}>

Though there is very big difference in internal implementation and public API between Lua and Google V8 Javascript, cpgf makes the binding exactly the same.
We use same data, the reflection meta data, to drive the binding.
We use same API, only the interface of classes GScriptObject and IScriptObject, to make the binding.

What does that mean?
It means <b>write your C++ code once, binding to different script language.</b>

<{/autobr}>

<{include name="cpgf-footer.inc" }>
